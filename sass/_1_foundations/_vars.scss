//
//   @variables
// ---------------------------------------------------------
//  _1_foundation/_vars.scss
// ---------------------------------------------------------
//
//  Global variables are defined here
//
// ---------------------------------------------------------




// --------------------------------------------------------
//
//  URLs
//
//  set the base url of the site (helpful for switching between server environments)
//
// --------------------------------------------------------

$base-url: '../' !default; // typically '/' or '../'




// --------------------------------------------------------
//
//  Typography
//
// --------------------------------------------------------

$base-font-size             : 18;
$small-font-size            : golden-ratio(($base-font-size / 2), 1);
$smallest-font-size         : golden-ratio($base-font-size, -1);
$large-font-size            : golden-ratio($base-font-size, 1);
$largest-font-size          : golden-ratio($base-font-size, 2);

$base-line-height           : 18 * 1.5;

/* @heading-sizes
--------------------------------------------------------
  Reusable extend classes are defined to be used
  throughout the CSS
  These classes use 'small medium large' naming
  Sizes range from @mixin h-xs to @mixin h-xxl.
------------------------------------------------------ */

@mixin h-xxl {
  font-size: 2.25em;                       // 36px
}

@mixin h-xl {
  font-size: 1.875em;                       // 30px
}

@mixin h-l {
  font-size: 1.5em;                         // 24px
}

@mixin h-m {
  font-size: 1.25em;                     // 20px
}

@mixin h-s {
  font-size: 1em;                       // 16px
}

@mixin h-xs {
  font-size: .875em;                         // 14px
}

/* @text-sizes
--------------------------------------------------------
  Reusable extend classes for text
-------------------------------------------------------- */

@mixin text-xl {
  font-size: 2em;                         // 32px
}

@mixin text-xl {
  font-size: 1.5em;                       // 24px
}

@mixin text-l {
  font-size: 1.125em;                     // 18px
}

@mixin text-m {
  font-size: 1em;                         // 16px
}

@mixin text-s {
  font-size: .875em;                      // 14px
}

@mixin text-xs {
  font-size: .75em;                       // 12px
}



// ::Dimensions     ================================================
// =====================================================================

$pad-small          : $base-font-size / 2;
$pad            : $base-font-size;
$pad-large          : $base-line-height;

$vertical-rhythm      : $base-font-size / 2;  // should equal a whole number

// breakpoints
$bp-small                   : 480/16 + 0em;
$bp-medium                  : 768/16 + 0em;
$bp-large                   : 992/16 + 0em;

$maxwidth                   : 1440/16 + 0em;

// grid dimensions
@function grid-cols($prefix){
  @if $prefix == s  { @return (11.212121212121213,32.7878787878788,32.7878787878788,11.212121212121213); }
  @if $prefix == m  { @return (11.212121212121213,16.2689393939394,16.2689393939394,16.2689393939394,16.2689393939394,11.212121212121213); }
  @if $prefix == mb { @return (11.212121212121213,22.5252525252525,22.5252525252525,22.5252525252525,11.212121212121213); }
  @if $prefix == l  { @return (11.212121212121213,16.8939393939394,16.8939393939394,16.893939393939394,16.8939393939394,11.212121212121213); }
  @if $prefix == lb { @return (11.212121212121213,23.1919191919192,23.1919191919192,23.1919191919192,11.212121212121213); }
  @if $prefix == lc { @return (11.212121212121213,11.212121212121213,22.5505000407102,22.5505000407102,11.212121212121213,11.212121212121213); }
}

@function grid-gutter($prefix){
  @if $prefix == s  { @return 4; }
  @if $prefix == m  { @return 2.5; }
  @if $prefix == mb { @return 2.5; }
  @if $prefix == l  { @return 2; }
  @if $prefix == lb { @return 2; }
  @if $prefix == lc { @return 2; }
}



// ::Colors       ================================================
// =====================================================================

// Cool
$aqua:  #7FDBFF;
$blue:  #0074D9;
$navy:  #001F3F;
$teal:  #39CCCC;
$green: #2ECC40;
$olive: #3D9970;
$lime:  #01FF70;

// Warm
$yellow:  #FFDC00;
$orange:  #FF851B;
$red:     #FF4136;
$fuchsia: #F012BE;
$purple:  #B10DC9;
$maroon:  #85144B;

// Gray Scale
$white:  #fff;
$silver: #ddd;
$gray:   #aaa;
$black:  #111;

// Define your main color palette
$primary-color        : rgb(198,66,39);
$secondary-color      : rgb(92,125,77);
$tertiary-color       : rgb(162,136,54);
$neutral-color        : rgb(125,96,62);

// Color variants
$dark-primary-color     : darken($primary-color,6.667%);
$darker-primary-color     : darken($primary-color,13.333%);
$darkest-primary-color    : darken($primary-color,20%);
$light-primary-color    : lighten($primary-color,16.667%);
$lighter-primary-color    : lighten($primary-color,33.333%);
$lightest-primary-color   : lighten($primary-color,50%);

$dark-secondary-color     : darken($secondary-color,6.667%);
$darker-secondary-color   : darken($secondary-color,13.333%);
$darkest-secondary-color  : darken($secondary-color,20%);
$light-secondary-color    : lighten($secondary-color,16.667%);
$lighter-secondary-color  : lighten($secondary-color,33.333%);
$lightest-secondary-color : lighten($secondary-color,50%);

$dark-tertiary-color    : darken($tertiary-color,6.667%);
$darker-tertiary-color    : darken($tertiary-color,13.333%);
$darkest-tertiary-color   : darken($tertiary-color,20%);
$light-tertiary-color     : lighten($tertiary-color,16.667%);
$lighter-tertiary-color   : lighten($tertiary-color,33.333%);
$lightest-tertiary-color  : lighten($tertiary-color,50%);

$dark-neutral-color     : darken($neutral-color,6.667%);
$darker-neutral-color     : darken($neutral-color,13.333%);
$darkest-neutral-color    : darken($neutral-color,20%);
$light-neutral-color    : lighten($neutral-color,16.667%);
$lighter-neutral-color    : lighten($neutral-color,33.333%);
$lightest-neutral-color   : lighten($neutral-color,50%);


// Assign colors to roles
$body-color         : $white;
$text-color         : $black;

// Choose a color for your hyperlinks. Often this will be the $primary-color
$link-color           : $primary-color;
$link-color-hover       : $dark-primary-color;
$link-color-visited       : $darker-primary-color;
$link-color-focus       : $dark-primary-color;

// Now define another set of colors. These will be used to style alerts and buttons
$alert-color        : rgb(218,79,73);
$error-color        : rgb(176,20,0);
$info-color         : rgb(216,220,162);
$inverse-color        : rgb(65,65,65);
$success-color        : rgb(188,212,222);
$warning-color        : $error-color;



// ::Texture      ================================================
// =====================================================================

$border-color           : $lighter-neutral-color;
$border-style         : solid;
$border-width           : 1px;
$border-radius          : 3px;






/* @colors
--------------------------------------------------------
  All color variables are defined here.

  We use real color names here.  Although naming something
  like 'brand' is in fact more generic and reusable, we've
  found that you end up creating variables like $brand-2,
  $brand-alt, $brand-complimentary etc.  While coding,
  it's too easy to forget what those mean.

  If the design changes drastically and the brand changes
  from, let's say, blue to green, just do a global
  find/replace - that's what text editors are for.
------------------------------------------------------ */

$blue: #00ccff;         // Main Brand Blue
$black: #010101;        // "Black"
$white: #fff;

$input-placeholder: #b2b2b2;

$error-bg: #ffe6e6;
$error-txt: #e04646;
$error-border: #e04646;

$warning-bg: #fcf7d8;
$warning-txt: #b29804;
$warning-border: #b29804;

$info-bg: #e8f3ff;
$info-txt: #537df6;
$info-border: #537df6;

$success-bg: #dafce1;
$success-txt: #0ca129;
$success-border: #0ca129;





/* @spacing
---------------------------------------------------------
  Create spacing units to reuse throughout your CSS.
--------------------------------------------------------- */

$spacing-xl: 9rem;

$spacing-l: 7rem;

$spacing-m: 3rem;

$spacing-s: 1rem;

$spacing-xs: .5rem;




/* @grid settings
---------------------------------------------------------
  Define the grid padding/gutter width and also the
  breakpoint at which default grid-units stack.
--------------------------------------------------------- */

// Define the width of grid padding (applied to left and right)
$grid-padding: 1em;

// Define breakpoint at which grids stack
$grid-stack-at-width: 34.375em;   // 550px